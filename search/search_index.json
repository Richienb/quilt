{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"A Python library that lets you write less code to do more things. Documentation available here . Getting started \u00b6 Install via pip \u00b6 pip install quilt-lang Importing \u00b6 import quilt_lang as _ Example usage \u00b6 if _ . ready : print ( \"Quilt is ready.\" ) For more commands, visit this website .","title":"Home"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"#install-via-pip","text":"pip install quilt-lang","title":"Install via pip"},{"location":"#importing","text":"import quilt_lang as _","title":"Importing"},{"location":"#example-usage","text":"if _ . ready : print ( \"Quilt is ready.\" ) For more commands, visit this website .","title":"Example usage"},{"location":"CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct \u00b6 Our Pledge \u00b6 In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards \u00b6 Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities \u00b6 Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope \u00b6 This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement \u00b6 Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at richiebendall@gmail.com . All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution \u00b6 This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code Of Conduct"},{"location":"CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at richiebendall@gmail.com . All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"CONTRIBUTING/","text":"How you can help \u00b6 At the moment, you can help by Adding more functions which you or someone else might find useful Adding and maintaining the docstrings Adding and improving unit tests Documenting and adding unit tests \u00b6 Here is an example of a compliant function. You may also depend on other functions in the project. In this example, the function isnum is used. def add ( num1 , num2 ): \"\"\" Adds 2 numbers together :type num1: number :param num1: The first number to add :type num2: number :param num2: The second number to add :return: The added number :rtype: number :raises TypeError: Invalid value type provided. >>> add(1, 2) 3 >>> add(1, \"foo\") Traceback (most recent call last): ... TypeError: Invalid value type provided. \"\"\" # If either num1 or num2 is not a number if not ( isnum ( num1 ) and isnum ( num2 )): # Raise a TypeError raise TypeError ( \"Invalid value type provided.\" ) # Return the added number return num1 + num2 Adding unit tests count towards the total code coverage score and should always be included. All the other fields, affect the module documentation found here . Testing guide \u00b6 Using GNU Make , you can execute multiple commands with a single one. Force install the latest production version of Quilt: make inst Test the code: make test Install the dependencies: make deps Generate the Mkdocs documentation: make mdoc Generate the Sphinx documentation: make sdoc Build the PyPi package: make pack","title":"Contributing"},{"location":"CONTRIBUTING/#how-you-can-help","text":"At the moment, you can help by Adding more functions which you or someone else might find useful Adding and maintaining the docstrings Adding and improving unit tests","title":"How you can help"},{"location":"CONTRIBUTING/#documenting-and-adding-unit-tests","text":"Here is an example of a compliant function. You may also depend on other functions in the project. In this example, the function isnum is used. def add ( num1 , num2 ): \"\"\" Adds 2 numbers together :type num1: number :param num1: The first number to add :type num2: number :param num2: The second number to add :return: The added number :rtype: number :raises TypeError: Invalid value type provided. >>> add(1, 2) 3 >>> add(1, \"foo\") Traceback (most recent call last): ... TypeError: Invalid value type provided. \"\"\" # If either num1 or num2 is not a number if not ( isnum ( num1 ) and isnum ( num2 )): # Raise a TypeError raise TypeError ( \"Invalid value type provided.\" ) # Return the added number return num1 + num2 Adding unit tests count towards the total code coverage score and should always be included. All the other fields, affect the module documentation found here .","title":"Documenting and adding unit tests"},{"location":"CONTRIBUTING/#testing-guide","text":"Using GNU Make , you can execute multiple commands with a single one. Force install the latest production version of Quilt: make inst Test the code: make test Install the dependencies: make deps Generate the Mkdocs documentation: make mdoc Generate the Sphinx documentation: make sdoc Build the PyPi package: make pack","title":"Testing guide"},{"location":"commands/","text":"Hmm... \u00b6 You shouldn't be seeing this. You should open an issue on GitHub .","title":"Commands"},{"location":"commands/#hmm","text":"You shouldn't be seeing this. You should open an issue on GitHub .","title":"Hmm..."}]}