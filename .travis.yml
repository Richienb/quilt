language:                   python

python:                     3.6.6

cache:                      pip

before_install:
    - git remote set-url origin https://Richienb:${github_token}@github.com/Richienb/quilt.git
    - git config --global user.name "ROS Bot"
    - git config --global user.email "richiebendall@gmail.com"

if: tag IS blank

jobs:
  include:
    - stage:                Testing

      script:
          - python src/test.py

      after_script:
          - if [ $TRAVIS_PULL_REQUEST != false ]; then travis_terminate 0; fi
          - pip install bumpversion
          - bumpversion patch
          - git add .bumpversion.cfg src/setup.py
          - git commit -m "Bump version [skip ci]"
          - until git push origin HEAD:master; do git pull --no-edit; git commit --amend -m "$(git log -1 --pretty=%B)"; done

    - stage:                Deployment

      if:                   type != pull_request

      install:
          - pip install pyminifier

      before_script:
          - cd src

      script:
          - find quilt_lang -type f -name "*.py" -exec pyminifier --lzma --obfuscate-variables --outfile="{}" "{}" \;

      deploy:
          - provider:       pypi
            user:           "Richienb"
            password:       $pypi_password
            skip_cleanup:   true
            server:         https://test.pypi.org/legacy/
            distributions:  "sdist bdist_wheel"
            on:
                branch:     master

          - provider:       pypi
            user:           "Richienb"
            password:       "$pypi_password"
            skip_cleanup:   true
            distributions:  "sdist bdist_wheel"
            on:
                branch:     master

    -

      if:                   type != pull_request

      install:
          - pip install pyminifier

      before_script:
          - cd src

      script:
          - find quilt_lang -type f -name "*.py" -exec pyminifier --lzma --obfuscate-variables --outfile="{}" "{}" \;
          - mkdir zips
          - zip -r zips/quilt.zip quilt_lang
          - tar -zcvf zips/quilt.tar.gz quilt_lang

      before_deploy:
          - "echo Deployment tag: $(sed -n '2p' $TRAVIS_BUILD_DIR/.bumpversion.cfg | awk '{print $3}')"

      deploy:
          provider:         releases
          api_key:          "$github_token"
          name:             "Edge Release"
          tag_name:         "$(sed -n '2p' $TRAVIS_BUILD_DIR/.bumpversion.cfg | awk '{print $3}')"
          file_glob:        true
          file:             "$TRAVIS_BUILD_DIR/src/zips/*"
          skip_cleanup:     true
          on:
              branch:       master

    -

      if:                   type != pull_request

      install:
          - pip install -r requirements.txt
          - pip install mkdocs mkdocs-material pymdown-extensions pygments

      script:
          - mkdocs build --verbose --clean --strict
          - cd src
          - python -m pydoc -w quilt_lang
          - mv quilt_lang.html $TRAVIS_BUILD_DIR/commands/index.html

      deploy:
          provider:         pages
          skip_cleanup:     true
          github_commit:    "CI | Built documentation [skip ci]"
          github_token:     $github_token
          name:             "ROS Bot"
          email:            "richiebendall@gmail.com"
          fqdn:             "quilt-lang.richie-bendall.ml"
          local_dir:        site
          on:
              branch:       master

      after_deploy:
          - |
            curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${cf_zone_id}/purge_cache" \
             -H "X-Auth-Email: richiebendall@gmail.com" \
             -H "X-Auth-Key: ${cf_api_key}" \
             -H "Content-Type: application/json" \
             --data '{"purge_everything":true}'
